gui:
  nerdFontsVersion: "3"

git:
  parseEmoji: false

os:
  editPreset: "nvim"

keybinding:
  files:
    commitChanges: <f5>

customCommands:
  - key: "c"
    context: "global"
    description: "Commit whit gitmoji"
    prompts:
      - type: "menu"
        title: "What kind of commit type is it?"
        key: "Type"
        options:
          - name: "fix"
            description: "Fix"
            value: "fix"
          - name: "feat"
            description: "Feature"
            value: "feat"
          - name: "docs"
            description: "Documentation"
            value: "docs"
          - name: "style"
            description: "Style"
            value: "style"
          - name: "refactor"
            description: "Refactor"
            value: "refactor"
          - name: "test"
            description: "Testing"
            value: "test"
          - name: "perf"
            description: "Performance"
            value: "perf"
          - name: "chore"
            description: "Chores"
            value: "chore"
          - name: "wip"
            description: "Work in progress"
            value: "wip"

      - type: "menu"
        title: "Choise the emoji"
        key: "Emoji"
        options:
          - name: "(empty)"
            description: ""
            value: ""
          - name: ":ambulance:"
            description: "(fix)üöë Hot fix"
            value: ":ambulance:"
          - name: ":bug:"
            description: "(fix)üêõ Bug fix"
            value: ":bug:"
          - name: ":rotating_light:"
            description: "(fix)üö® Fix compiler/linter warnings"
            value: ":rotating_light:"
          - name: ":twisted_rightwards_arrows:"
            description: "(fix)üîÄ Resolve conflicts"
            value: ":twisted_rightwards_arrows:"
          - name: ":tada"
            description: "(feat)üéâ Begin a project"
            value: ":tada:"
          - name: ":sparkles:"
            description: "(feat)‚ú® Start a new feature"
            value: ":sparkles:"
          - name: ":up:"
            description: "(feat)üÜô Upgrade a feature"
            value: ":up:"
          - name: ":bento:"
            description: "(feat)üç± Update assests"
            value: ":bento:"
          - name: ":construction_worker:"
            description: "(feat)üë∑ Update CI/CD"
            value: ":construction_worker:"
          - name: ":memo:"
            description: "(docs)üìù Update docs"
            value: ":memo:"
          - name: ":bulb"
            description: "(docs)üí° Update comments in code"
            value: ":bulb:"
          - name: ":art:"
            description: "(style)üé® Improve structure/format of code"
            value: ":art:"
          - name: ":lipstick:"
            description: "(style)üíÑ Update UI styles"
            value: ":lipstick:"
          - name: ":recycle:"
            description: "(refactor)‚ôªÔ∏è Refactor code"
            value: ":recycle:"
          - name: ":building_construction:"
            description: "(refactor)üèóÔ∏è Refactor in progress"
            value: ":building_construction:"
          - name: ":truck:"
            description: "(refactor)üöö Move or rename resources"
            value: ":truck:"
          - name: ":fire:"
            description: "(refactor)üî• Delete codo/files"
            value: ":fire:"
          - name: ":clown_face:"
            description: "(test)ü§° Mock things"
            value: ":clown_face:"
          - name: ":white_check_mark:"
            description: "(test)‚úÖ Fix tests"
            value: ":white_check_mark:"
          - name: ":zap:"
            description: "(perf)‚ö°Ô∏è Upgrade performance"
            value: ":zap:"
          - name: ":rocket:"
            description: "(perf)üöÄ Deploy stuff"
            value: ":rocket:"
          - name: ":wrench:"
            description: "(chore)üîß Chores"
            value: ":wrench:"
          - name: ":construction:"
            description: "(wip)üöß Work in progress"
            value: ":construction:"

      - type: "input"
        title: "(Optional) Enter the scope"
        key: "Scope"
        initialValue: ""

      - type: "input"
        title: "Enter the Message"
        key: "Message"
        initialValue: ""

      - type: "input"
        title: "(Optional) Enter the body"
        key: "Body"
        initialValue: ""

      - type: "input"
        title: "(Optional) Enter the text for breaking changes"
        key: "Footer"
        initialValue: ""

      - type: "confirm"
        title: "Commit"
        body: "Commit with the message '{{.Form.Emoji}} {{.Form.Type}}({{.Form.Scope}}): {{.Form.Message}}'. Is this okay?"

    command: "git commit -m '{{.Form.Emoji}} {{.Form.Type}}{{if .Form.Scope}}({{.Form.Scope}}){{end}}{{if .Form.Footer}}!{{end}}: {{.Form.Message}}' {{if .Form.Body}}-m '{{.Form.Body}}'{{end}} {{if .Form.Footer}}-m 'BREAKING CHANGE: {{.Form.Footer}}'{{end}} --no-verify"
    loadingText: "Commiting..."
